# SPDX-License-Identifier: MIT OR Apache-2.0
# SPDX-FileCopyrightText: Critical Section GmbH


msgid ""
msgstr ""
"Project-Id-Version: Ferrocene Language Specification \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-27 20:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../<rst_prolog>:4
msgid ""
"You're reading a draft of the Ferrocene Language Specification. Some "
"parts of this document might be missing, incomplete or incorrect. Our aim"
" is to have the specification ready by the end of 2022."
msgstr ""

#: ../../src/generics.rst:9
msgid "Generics"
msgstr ""

#: ../../src/generics.rst:14
msgid "Generic Parameters"
msgstr ""

#: ../../src/generics.rst:17 ../../src/generics.rst:188
#: ../../src/generics.rst:244
msgid "Syntax"
msgstr ""

#: ../../src/generics.rst:40 ../../src/generics.rst:208
#: ../../src/generics.rst:270 ../../src/generics.rst:337
msgid "Legality Rules"
msgstr ""

#: ../../src/generics.rst:41
msgid ""
":dp:`fls_sye3d17l9bf5` A :t:`generic parameter` is a placeholder for a "
":t:`constant`, a :t:`lifetime`, or a :t:`type` whose :t:`value` is "
"supplied statically by a :t:`generic argument`."
msgstr ""

#: ../../src/generics.rst:46
msgid ""
":dp:`fls_4a2qshaf5se7` It is a static error to use a :t:`generic "
"parameter` in the :t:`discriminant initializer` of an :t:`enum variant`."
msgstr ""

#: ../../src/generics.rst:50
msgid ""
":dp:`fls_dalqke3rznrb` All :s:`[LifetimeParameter]s` in a "
":s:`GenericParameterList` shall precede all :s:`[ConstantParameter]s` and"
" :s:`[TypeParameter]s`."
msgstr ""

#: ../../src/generics.rst:54
msgid ""
":dp:`fls_gw8gutq2215z` A :s:`LifetimeParameterList` shall be terminated "
"by character 0x2C (comma) when followed by a "
":s:`ConstantOrTypeParameterList`."
msgstr ""

#: ../../src/generics.rst:58
msgid ""
":dp:`fls_pi6eukz7kc99` A :t:`generic enum` is an :t:`enum` with "
":t:`[generic parameter]s`."
msgstr ""

#: ../../src/generics.rst:61
msgid ""
":dp:`fls_ixmgqupxvf73` A :t:`generic function` is a :t:`function` with "
":t:`[generic parameter]s`."
msgstr ""

#: ../../src/generics.rst:64
msgid ""
":dp:`fls_z311nxou9yi3` A :t:`generic implementation` is an "
":t:`implementation` with :t:`[generic parameter]s`."
msgstr ""

#: ../../src/generics.rst:68
msgid ""
":dp:`fls_wmcp0n36jlbr` A :t:`generic struct` is a :t:`struct` with "
":t:`[generic parameter]s`."
msgstr ""

#: ../../src/generics.rst:71
msgid ""
":dp:`fls_h42kg56vsefx` A :t:`generic trait` is a :t:`trait` with "
":t:`[generic parameter]s`."
msgstr ""

#: ../../src/generics.rst:74
msgid ""
":dp:`fls_372h3oevejih` A :t:`generic type alias` is a :t:`type alias` "
"with :t:`[generic parameter]s`."
msgstr ""

#: ../../src/generics.rst:77
msgid ""
":dp:`fls_u8mqct93yimd` A :t:`generic union` is a :t:`union` with "
":t:`[generic parameter]s`."
msgstr ""

#: ../../src/generics.rst:80
msgid ""
":dp:`fls_vpcqgec83ybt` A :t:`constant parameter` is a :t:`generic "
"parameter` for a :t:`constant`."
msgstr ""

#: ../../src/generics.rst:83
msgid ""
":dp:`fls_s0nrjwqg2wox` A :t:`lifetime parameter` is a :t:`generic "
"parameter` for a :t:`lifetime`."
msgstr ""

#: ../../src/generics.rst:86
msgid ""
":dp:`fls_2grtygcj8o3` A :t:`lifetime parameter` shall not be used within "
"a :t:`constant context`, except for the ``'static`` :t:`lifetime`."
msgstr ""

#: ../../src/generics.rst:90
msgid ""
":dp:`fls_95eooah0vcqx` A :t:`type parameter` is a :t:`generic parameter` "
"for a :t:`type`."
msgstr ""

#: ../../src/generics.rst:93
msgid ""
":dp:`fls_x4s7p2v981r6` A :t:`generic enum` shall use all of its :t:`[type"
" parameter]s` and :t:`[lifetime parameter]s` at least once in at least "
"one of its :t:`[enum variant]s`."
msgstr ""

#: ../../src/generics.rst:98
msgid ""
":dp:`fls_jzfk9fspzqja` A :t:`generic struct` shall use all of its "
":t:`[type parameter]s` and :t:`[lifetime parameter]s` at least once in at"
" least one of its :t:`[field]s`."
msgstr ""

#: ../../src/generics.rst:102
msgid ""
":dp:`fls_6j616ydf2mnh` A :t:`generic union` shall use all of its "
":t:`[type parameter]s` and :t:`[lifetime parameter]s` at least once in at"
" least one of its :t:`[field]s`."
msgstr ""

#: ../../src/generics.rst:106
msgid ""
":dp:`fls_hyi2jnp38v1n` A :t:`generic parameter` is said to :t:`constrain`"
" an :t:`implementation` if the :t:`generic parameter` appears at least "
"once in one of the following:"
msgstr ""

#: ../../src/generics.rst:110
msgid ":dp:`fls_62b59qvom3nm` The :t:`implemented trait`, or"
msgstr ""

#: ../../src/generics.rst:113
msgid ":dp:`fls_oq76uff9gp0k` The :t:`implementing type`, or"
msgstr ""

#: ../../src/generics.rst:116
msgid ""
":dp:`fls_sseo6u6pbcki` As a :t:`binding argument` in the :t:`[bound]s` of"
" a :t:`type` that contains another :t:`generic parameter` that "
":t:`[constrain]s` the :t:`implementation`."
msgstr ""

#: ../../src/generics.rst:120
msgid ""
":dp:`fls_ua3w16qo9o4` It is a static error if a :t:`type parameter` or "
":t:`constant parameter` of an :t:`implementation` does not :t:`constrain`"
" the :t:`implementation`."
msgstr ""

#: ../../src/generics.rst:124
msgid ""
":dp:`fls_w9ol06mldwb` It is a static error if a :t:`lifetime parameter` "
"of an :t:`implementation` is used in an :t:`associated type` without "
":t:`[constrain]ing` the :t:`implementation`."
msgstr ""

#: ../../src/generics.rst:129
msgid ""
":dp:`fls_g2pfrqhmeys8` The :t:`type` of a :t:`constant parameter` shall "
"be a :t:`scalar type`."
msgstr ""

#: ../../src/generics.rst:132
msgid ""
":dp:`fls_56jq9k9l31rt` A :t:`constant parameter` shall be used in the "
"following contexts:"
msgstr ""

#: ../../src/generics.rst:135
msgid ""
":dp:`fls_sh669lnc5o1b` As a :t:`constant argument` in the signature and "
"fields of an item."
msgstr ""

#: ../../src/generics.rst:138
msgid ""
":dp:`fls_h6kx8dxh5u96` In the :t:`initialization expression` of an "
":t:`associated constant`."
msgstr ""

#: ../../src/generics.rst:141
msgid ""
":dp:`fls_5r7ontjlmgwj` As a :t:`constant argument` of an :t:`[associated "
"type]'s` :s:`InitializationType`."
msgstr ""

#: ../../src/generics.rst:145
msgid ""
":dp:`fls_prbwj1pmng6k` As a :t:`constant argument` of any :t:`type` used "
"within a :t:`function body`."
msgstr ""

#: ../../src/generics.rst:148
msgid ""
":dp:`fls_byqjs5fvy2bj` As a :t:`value` of any :t:`expression` within a "
":t:`function body`."
msgstr ""

#: ../../src/generics.rst:151
msgid ""
":dp:`fls_hidfwkwr2r73` A :t:`type parameter` has an implicit "
":std:`core::marker::Sized` bound, unless a ``?core::marker::Sized`` bound"
" is present."
msgstr ""

#: ../../src/generics.rst:155
msgid ""
":dp:`fls_m0bzw4jap6sg` A :t:`generic parameter` with a :t:`bound` of the "
"form"
msgstr ""

#: ../../src/generics.rst:162
msgid ""
":dp:`fls_vo7mgm34hwg2` is equivalent to the :t:`generic parameter` "
"without the bound and a :t:`where clause` of the following form:"
msgstr ""

#: ../../src/generics.rst:171 ../../src/generics.rst:231
#: ../../src/generics.rst:310
msgid "Examples"
msgstr ""

#: ../../src/generics.rst:185
msgid "Where Clauses"
msgstr ""

#: ../../src/generics.rst:209
msgid ""
":dp:`fls_3nqb7p5ifvio` A :t:`where clause` is a :t:`construct` that "
"specifies when a :t:`construct` with generic arguments supplied is valid."
msgstr ""

#: ../../src/generics.rst:213
msgid ""
":dp:`fls_ytk74dyxuy6d` A :t:`construct` is valid when all of its where "
"clause predicates hold true for the supplied generic arguments."
msgstr ""

#: ../../src/generics.rst:217
msgid ""
":dp:`fls_fhy4rsmmbvyy` A :t:`where clause predicate` is a :t:`construct` "
"that specifies lifetime bounds on :t:`[lifetime parameter]s` and trait "
":t:`[bound]s` and lifetimes bounds on types."
msgstr ""

#: ../../src/generics.rst:222
msgid ""
":dp:`fls_1xgw1dq60quz` A :t:`trivial predicate` is a :t:`where clause "
"predicate` that does not use the :t:`[generic parameter]s` or :t"
":`[higher-ranked lifetime]s` of the related :t:`construct`."
msgstr ""

#: ../../src/generics.rst:227
msgid ""
":dp:`fls_47s8i7pzb9gg` It is a static error to create a :t:`trivial "
"predicate` that does not hold."
msgstr ""

#: ../../src/generics.rst:241
msgid "Generic Arguments"
msgstr ""

#: ../../src/generics.rst:271
msgid ""
":dp:`fls_3x6qd8vt5uus` A :t:`generic argument` supplies a static input "
"for an :t:`associated trait type` or a  :t:`generic parameter`."
msgstr ""

#: ../../src/generics.rst:275
msgid ""
":dp:`fls_ky39fb2vcom6` A :s:`BindingArgument` shall follow "
":s:`[ConstantArgument]s`, :s:`[LifetimeArgument]s`, and "
":s:`[TypeArgument]s` in a :s:`GenericArgumentList`."
msgstr ""

#: ../../src/generics.rst:280
msgid ""
":dp:`fls_9n1ejjili06h` A :s:`LifetimeArgument` shall precede "
":s:`[BindingArgument]s`, :s:`[ConstantArgument]s`, and "
":s:`[TypeArgument]s` in a :s:`GenericArgumentList`."
msgstr ""

#: ../../src/generics.rst:285
msgid ""
":dp:`fls_i3z9ueoe99zd` A :t:`constant argument` is a :t:`generic "
"argument` that supplies the :t:`value` of a :t:`constant parameter`."
msgstr ""

#: ../../src/generics.rst:289
msgid ""
":dp:`fls_d4vdvpihoeb1` A :t:`type argument` is a :t:`generic argument` "
"that supplies the :t:`type` of a :t:`type parameter`."
msgstr ""

#: ../../src/generics.rst:293
msgid ""
":dp:`fls_10k9gdxlpuls` A :t:`lifetime argument` is a :t:`generic "
"argument` that supplies the :t:`lifetime` of a :t:`lifetime parameter`."
msgstr ""

#: ../../src/generics.rst:297
msgid ""
":dp:`fls_9pda3ja0ihks` A :t:`binding argument` is a :t:`generic argument`"
" that supplies the :t:`type` of an :t:`associated trait type`."
msgstr ""

#: ../../src/generics.rst:301
msgid ""
":dp:`fls_al4dhmqodvwc` A :t:`constant argument` may only appear as a "
"single segment :t:`path expression`, optionally inside a :t:`block "
"expression`, inside of a :t:`type` or :t:`array repeat expression`."
msgstr ""

#: ../../src/generics.rst:306
msgid ""
":dp:`fls_ukarc98ceesz` :t:`[Generic argument]s` are subject to "
":t:`generic conformance`."
msgstr ""

#: ../../src/generics.rst:317
msgid ""
":dp:`fls_l88o2snx9qbt` The following is a generic function with a binding"
" argument."
msgstr ""

#: ../../src/generics.rst:324
msgid ":dp:`fls_thpj9io9tyuy` The following are generic arguments for ``func``."
msgstr ""

#: ../../src/generics.rst:334
msgid "Generic Conformance"
msgstr ""

#: ../../src/generics.rst:338
msgid ""
":dp:`fls_gb3mpt5rxjoa` A :t:`constant argument` is conformant with a "
":t:`constant parameter` when the :t:`[type]s` of the :t:`constant "
"argument` and :t:`constant parameter` are :t:`unifiable`."
msgstr ""

#: ../../src/generics.rst:343
msgid ""
":dp:`fls_kdeltu9dsd0d` A :t:`lifetime argument` is conformant with a "
":t:`lifetime parameter` when it outlives the lifetimes specified by the "
":t:`lifetime parameter`\\ **.**"
msgstr ""

#: ../../src/generics.rst:347
msgid ""
":dp:`fls_ws1h57fk1mkh` A :t:`type argument` is conformant with a :t:`type"
" parameter` when the :t:`type` of the :t:`type argument` fulfills the "
"required :t:`[trait bound]s` of the :t:`type parameter`."
msgstr ""

#: ../../src/generics.rst:352
msgid ""
":dp:`fls_ltch5eivxgaa` A :t:`binding argument` is conformant with an "
":t:`associated type` when the supplied :t:`type` of the :t:`binding "
"argument` fulfills the required :t:`[trait bound]s` of the :t:`associated"
" type`."
msgstr ""

#: ../../src/generics.rst:357
msgid ""
":dp:`fls_w0ozotuwtr9` :t:`[Generic argument]s` are conformant with "
":t:`[generic parameter]s` when"
msgstr ""

#: ../../src/generics.rst:360
msgid ""
":dp:`fls_91bylteu35bi` The :t:`[generic argument]s` consist only of "
"conformant :t:`[constant argument]s`, conformant :t:`[lifetime "
"argument]s`, conformant :t:`[type argument]s`, and conformant "
":t:`[binding argument]s`, and"
msgstr ""

#: ../../src/generics.rst:365
msgid ""
":dp:`fls_j6xtrxc6aik` Any remaining :t:`[generic parameter]s` without "
"corresponding conformant :t:`[generic argument]s` are :t:`[lifetime "
"parameter]s` with either :t:`[inferred lifetime argument]s` or "
":t:`[elided lifetime]s`, and"
msgstr ""

#: ../../src/generics.rst:370
msgid ""
":dp:`fls_us7d30cbwgpz` All :t:`[lifetime argument]s` come first, followed"
" by :t:`[constant argument]s` and :t:`[type argument]s` in the order as "
"defined by the :t:`[generic parameter]s`, followed by :t:`[binding "
"argument]s`, and"
msgstr ""

#: ../../src/generics.rst:375
msgid ""
":dp:`fls_dp3hpvf0fmr8` All :t:`[lifetime argument]s`, :t:`[constant "
"argument]s` and :t:`[type argument]s` have a corresponding :t:`generic "
"parameter`."
msgstr ""

#: ../../src/generics.rst:379
msgid ":dp:`fls_mg45zcguxxg5` :t:`[Generic argument]s` shall be conformant."
msgstr ""

